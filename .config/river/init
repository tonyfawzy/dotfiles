#!/bin/sh

# This is the example configuration file for river.
#
# If you wish to edit this, you will probably want to copy it to
# $XDG_CONFIG_HOME/river/init or $HOME/.config/river/init first.
#
# See the river(1), riverctl(1), and rivertile(1) man pages for complete
# documentation.

# Note: the "Super" modifier is also known as Logo, GUI, Windows, Mod4, etc.

# Autostart
riverctl spawn "mako"
riverctl spawn "yambar"
riverctl keyboard-layout -options "grp:sclk_toggle,caps:escape,altwin:menu_win,grp_led:scroll" "us,ara"

riverctl map normal Super Return spawn foot

riverctl map normal Super D spawn "fuzzel -I"
riverctl map normal Super W spawn brave
riverctl map normal Super+Shift f spawn "foot -a 'foot-lf' lf"
riverctl map normal Super Tab focus-previous-tags



riverctl map normal Super Equal spawn "$HOME/script/volume.sh up"
riverctl map normal Super Minus spawn "$HOME/script/volume.sh down"
riverctl map normal Super BackSpace spawn "$HOME/script/volume.sh toggle"

riverctl map normal None Print spawn "$HOME/script/screenshot.sh"
riverctl map normal Super Print spawn "$HOME/script/screencast.sh"

# Super+Q to close the focused view
riverctl map normal Super Q close

# Super+Shift+E to exit river
riverctl map normal Super+Shift C exit

# Super+J and Super+K to focus the next/previous view in the layout stack
riverctl map normal Super J focus-view next
riverctl map normal Super K focus-view previous

# Super+Shift+J and Super+Shift+K to swap the focused view with the next/previous
# view in the layout stack
riverctl map normal Super+Shift J swap next
riverctl map normal Super+Shift K swap previous

# Super+Period and Super+Comma to focus the next/previous output
riverctl map normal Super Period focus-output next
riverctl map normal Super Comma focus-output previous

# Super+Shift+{Period,Comma} to send the focused view to the next/previous output
riverctl map normal Super+Shift Period send-to-output next
riverctl map normal Super+Shift Comma send-to-output previous

# Super+Return to bump the focused view to the top of the layout stack
riverctl map normal Super+Shift Return zoom

# Super+H and Super+L to decrease/increase the main ratio of rivertile(1)
riverctl map normal Super H send-layout-cmd rivertile "main-ratio -0.05"
riverctl map normal Super L send-layout-cmd rivertile "main-ratio +0.05"

# Super+Shift+H and Super+Shift+L to increment/decrement the main count of rivertile(1)
riverctl map normal Super+Shift H send-layout-cmd rivertile "main-count +1"
riverctl map normal Super+Shift L send-layout-cmd rivertile "main-count -1"

# Super+Alt+{H,J,K,L} to move views
#riverctl map normal Super+Alt H move left 100
#riverctl map normal Super+Alt J move down 100
#riverctl map normal Super+Alt K move up 100
#riverctl map normal Super+Alt L move right 100

# Super+Alt+Control+{H,J,K,L} to snap views to screen edges
#riverctl map normal Super+Alt+Control H snap left
#riverctl map normal Super+Alt+Control J snap down
#riverctl map normal Super+Alt+Control K snap up
#riverctl map normal Super+Alt+Control L snap right

# Super+Alt+Shift+{H,J,K,L} to resize views
#riverctl map normal Super+Alt+Shift H resize horizontal -100
#riverctl map normal Super+Alt+Shift J resize vertical 100
#riverctl map normal Super+Alt+Shift K resize vertical -100
#riverctl map normal Super+Alt+Shift L resize horizontal 100

# Super + Left Mouse Button to move views
riverctl map-pointer normal Super BTN_LEFT move-view

# Super + Right Mouse Button to resize views
riverctl map-pointer normal Super BTN_RIGHT resize-view

# Super + Middle Mouse Button to toggle float
riverctl map-pointer normal Super BTN_MIDDLE toggle-float

for i in $(seq 1 9)
do
    tags=$((1 << ($i - 1)))

    # Super+[1-9] to focus tag [0-8]
    riverctl map normal Super $i set-focused-tags $tags

    # Super+Shift+[1-9] to tag focused view with tag [0-8]
    riverctl map normal Super+Shift $i set-view-tags $tags

    # Super+Control+[1-9] to toggle focus of tag [0-8]
    # riverctl map normal Super+Control $i toggle-focused-tags $tags

    # Super+Shift+Control+[1-9] to toggle tag [0-8] of focused view
    # riverctl map normal Super+Shift+Control $i toggle-view-tags $tags
done

# Super+0 to focus all tags
# Super+Shift+0 to tag focused view with all tags
# all_tags=$(((1 << 32) - 1))
# riverctl map normal Super 0 set-focused-tags $all_tags
# riverctl map normal Super+Shift 0 set-view-tags $all_tags

# Super+Space to toggle float
riverctl map normal Super Space toggle-float

# Super+F to toggle fullscreen
riverctl map normal Super F toggle-fullscreen

# Super+{Up,Right,Down,Left} to change layout orientation
riverctl map normal Super Up    send-layout-cmd rivertile "main-location top"
riverctl map normal Super Right send-layout-cmd rivertile "main-location right"
riverctl map normal Super Down  send-layout-cmd rivertile "main-location bottom"
riverctl map normal Super Left  send-layout-cmd rivertile "main-location left"

# Declare a passthrough mode. This mode has only a single mapping to return to
# normal mode. This makes it useful for testing a nested wayland compositor
riverctl declare-mode passthrough

# Super+F11 to enter passthrough mode
riverctl map normal Super F11 enter-mode passthrough

# Super+F11 to return to normal mode
riverctl map passthrough Super F11 enter-mode normal

# Set background and border color
riverctl background-color 0x89b4fa15
#riverctl background-color 0xf5c2e715 # Pink
#riverctl background-color 0x11111b
#riverctl border-color-focused 0xa6e3a1
riverctl border-color-focused 0x89b4fa
#riverctl border-color-focused 0xf5c2e7
riverctl border-color-unfocused 0x313244
#riverctl border-color-unfocused 0x586e75

#Configuration
riverctl focus-follows-cursor always
riverctl default-attach-mode bottom

# Set keyboard repeat rate
riverctl set-repeat 50 300

# Make all views with an app-id that starts with "float" and title "foo" start floating.
riverctl rule-add -app-id 'float*' -title 'foo' float

# Make all views with app-id "bar" and any title use client-side decorations
riverctl rule-add -app-id "bar" csd

riverctl rule-add -app-id "brave-browser" tags $((1 << (1 - 1)))
riverctl rule-add -app-id "firefox" tags $((1 << (1 - 1)))
riverctl rule-add -app-id "firefox" ssd
riverctl rule-add -app-id "code" tags $((1 << (2 - 1)))
riverctl rule-add -app-id "org.keepassxc.KeePassXC" tags $((1 << (3 - 1)))
riverctl rule-add -app-id "discord" tags $((1 << (9 - 1)))

riverctl rule-add -app-id 'brave' float
riverctl rule-add -title 'Open File*' float
riverctl rule-add -app-id 'imv' float
riverctl rule-add -app-id 'imv' ssd
riverctl rule-add -app-id 'mpv' float
riverctl rule-add -app-id 'foot-lf' float

# Set the default layout generator to be rivertile and start it.
# River will send the process group of the init executable SIGTERM on exit.
riverctl default-layout rivertile
rivertile -view-padding 2 -outer-padding 2 &
